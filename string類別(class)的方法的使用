##定義 ==> StackOfIntegers.h

#ifndef STACK_H
#define STACK_H

class StackOfIntegers   //類別名稱
{
public:                  //公開的  可以被存取
  StackOfIntegers();     //建構值
  bool isEmpty() const;   //()測試是否為空的函數
  int peek() const;       //最上面的函數
  void push(int value);    //把資料丟入的函數
  int pop();               //取出最上層資料的函數
  int getSize() const;      //取得堆疊的大小的函數

private:                   //私有的    1.把資料隱藏起來    2. 使用上述的公開函數來存取
  int elements[100];       //整數類型的元素  大小為100
  int size;
};

#endif

#include "StackOfIntegers.h"

StackOfIntegers::StackOfIntegers()   //()類別建構值的實作
{
  size = 0;   //建構值為0
}

bool StackOfIntegers::isEmpty() const     //測試是否為空的實作
{
  return (size == 0);    //判斷式size == 0 若大小為零等則回傳假;若大小不為零則回傳真
}

int StackOfIntegers::peek() const     //取出最上層資料的實作
{
  return elements[size - 1];       //大小-1
}

void StackOfIntegers::push(int value)   //取出最上層資料的函數
{
  elements[size++] = value;          //先執行size在做遞增
}

int StackOfIntegers::pop()
{
  return elements[--size];        //先遞減在執行size
}

int StackOfIntegers::getSize() const
{
  return size;     //回傳大小
}
